package com.osrapi.models.avalon;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.MapKeyColumn;
import javax.persistence.MapKeyJoinColumn;
import javax.persistence.MappedSuperclass;
import javax.persistence.OneToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * @author drau
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Entity
@Table(name = "io_npc_data", schema = "avalon")
public final class AVALONIoNpcDataEntity {
    /**
     * the primary key - an autogenerated id (unique for each user in the db).
     */
    @Id
    @Column(name = "io_npc_data_id")
    @GeneratedValue(strategy = GenerationType.SEQUENCE,
  generator = "io_npc_data_seq")
    @SequenceGenerator(
        name = "io_npc_data_seq",
        sequenceName = "avalon.io_npc_data_id_seq",
        allocationSize = 1
    )
    private Long                    id;
    /** Creates a new instance of {@link AVALONIoNpcDataEntity}. */
    public AVALONIoNpcDataEntity() {
        super();
    }
    /**
     * Gets the id.
     * @return {@link Long}
     */
    public Long getId() {
        return id;
    }
    /**
     * Sets the id.
     * @param val the new value
     */
    public void setId(final Long val) {
        id = val;
    }

    /** the weight. */
    @ManyToOne(targetEntity = AVALONVulnerabilityEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "weight")
    @JsonProperty("weight")
  
    private AVALONVulnerabilityEntity    weight;
    /**
     * Gets the weight.
     * @return {@link AVALONVulnerabilityEntity}
     */
    public AVALONVulnerabilityEntity getWeight() {
        return weight;
    }
    /**
     * Sets the weight.
     * @param val the new value
     */
    public void setWeight(final AVALONVulnerabilityEntity val) {
        weight = val;
    }

    /** the wage. */
    @Column(name = "wage")
    @JsonProperty("wage")
    
    private Long                    wage;
    /**
     * Gets the wage.
     * @return {@link Long}
     */
    public Long getWage() {
        return wage;
    }
    /**
     * Sets the wage.
     * @param val the new value
     */
    public void setWage(final Long val) {
        wage = val;
    }

    /** the vulnerability. */
    @ManyToOne(targetEntity = AVALONVulnerabilityEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "vulnerability")
    @JsonProperty("vulnerability")
  
    private AVALONVulnerabilityEntity    vulnerability;
    /**
     * Gets the vulnerability.
     * @return {@link AVALONVulnerabilityEntity}
     */
    public AVALONVulnerabilityEntity getVulnerability() {
        return vulnerability;
    }
    /**
     * Sets the vulnerability.
     * @param val the new value
     */
    public void setVulnerability(final AVALONVulnerabilityEntity val) {
        vulnerability = val;
    }

    /** the unalertedMove. */
    @Column(name = "unalerted_move")
    @JsonProperty("unalerted_move")
    @NotNull
    private long                    unalertedMove;
    /**
     * Gets the unalertedMove.
     * @return {@link long}
     */
    public long getUnalertedMove() {
        return unalertedMove;
    }
    /**
     * Sets the unalertedMove.
     * @param val the new value
     */
    public void setUnalertedMove(final long val) {
        unalertedMove = val;
    }

    /** the unalertedAttackWeight. */
    @ManyToOne(targetEntity = AVALONVulnerabilityEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "unalertedAttackWeight")
    @JsonProperty("unalerted_attack_weight")
  
    private AVALONVulnerabilityEntity    unalertedAttackWeight;
    /**
     * Gets the unalertedAttackWeight.
     * @return {@link AVALONVulnerabilityEntity}
     */
    public AVALONVulnerabilityEntity getUnalertedAttackWeight() {
        return unalertedAttackWeight;
    }
    /**
     * Sets the unalertedAttackWeight.
     * @param val the new value
     */
    public void setUnalertedAttackWeight(final AVALONVulnerabilityEntity val) {
        unalertedAttackWeight = val;
    }

    /** the unalertedAttackStars. */
    @Column(name = "unalerted_attack_stars")
    @JsonProperty("unalerted_attack_stars")
    
    private Long                    unalertedAttackStars;
    /**
     * Gets the unalertedAttackStars.
     * @return {@link Long}
     */
    public Long getUnalertedAttackStars() {
        return unalertedAttackStars;
    }
    /**
     * Sets the unalertedAttackStars.
     * @param val the new value
     */
    public void setUnalertedAttackStars(final Long val) {
        unalertedAttackStars = val;
    }

    /** the unalertedAttackSpell. */
    @ManyToOne(targetEntity = AVALONMagicTypeEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "unalertedAttackSpell")
    @JsonProperty("unalerted_attack_spell")
  
    private AVALONMagicTypeEntity    unalertedAttackSpell;
    /**
     * Gets the unalertedAttackSpell.
     * @return {@link AVALONMagicTypeEntity}
     */
    public AVALONMagicTypeEntity getUnalertedAttackSpell() {
        return unalertedAttackSpell;
    }
    /**
     * Sets the unalertedAttackSpell.
     * @param val the new value
     */
    public void setUnalertedAttackSpell(final AVALONMagicTypeEntity val) {
        unalertedAttackSpell = val;
    }

    /** the unalertedAttackSpeed. */
    @Column(name = "unalerted_attack_speed")
    @JsonProperty("unalerted_attack_speed")
    @NotNull
    private long                    unalertedAttackSpeed;
    /**
     * Gets the unalertedAttackSpeed.
     * @return {@link long}
     */
    public long getUnalertedAttackSpeed() {
        return unalertedAttackSpeed;
    }
    /**
     * Sets the unalertedAttackSpeed.
     * @param val the new value
     */
    public void setUnalertedAttackSpeed(final long val) {
        unalertedAttackSpeed = val;
    }

    /** the title. */
    @Column(name = "title")
    @JsonProperty("title")
    @NotNull
    private String                    title;
    /**
     * Gets the title.
     * @return {@link String}
     */
    public String getTitle() {
        return title;
    }
    /**
     * Sets the title.
     * @param val the new value
     */
    public void setTitle(final String val) {
        title = val;
    }

    /** the npcFlags. */
    @Column(name = "npc_flags")
    @JsonProperty("npc_flags")
    
    private Long                    npcFlags;
    /**
     * Gets the npcFlags.
     * @return {@link Long}
     */
    public Long getNpcFlags() {
        return npcFlags;
    }
    /**
     * Sets the npcFlags.
     * @param val the new value
     */
    public void setNpcFlags(final Long val) {
        npcFlags = val;
    }

    /** the notoriety. */
    @Column(name = "notoriety")
    @JsonProperty("notoriety")
    @NotNull
    private long                    notoriety;
    /**
     * Gets the notoriety.
     * @return {@link long}
     */
    public long getNotoriety() {
        return notoriety;
    }
    /**
     * Sets the notoriety.
     * @param val the new value
     */
    public void setNotoriety(final long val) {
        notoriety = val;
    }

    /** the naturalWeaponType. */
    @ManyToOne(targetEntity = AVALONAttackTypeEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "naturalWeaponType")
    @JsonProperty("natural_weapon_type")
  
    private AVALONAttackTypeEntity    naturalWeaponType;
    /**
     * Gets the naturalWeaponType.
     * @return {@link AVALONAttackTypeEntity}
     */
    public AVALONAttackTypeEntity getNaturalWeaponType() {
        return naturalWeaponType;
    }
    /**
     * Sets the naturalWeaponType.
     * @param val the new value
     */
    public void setNaturalWeaponType(final AVALONAttackTypeEntity val) {
        naturalWeaponType = val;
    }

    /** the naturalWeaponLength. */
    @Column(name = "natural_weapon_length")
    @JsonProperty("natural_weapon_length")
    
    private Long                    naturalWeaponLength;
    /**
     * Gets the naturalWeaponLength.
     * @return {@link Long}
     */
    public Long getNaturalWeaponLength() {
        return naturalWeaponLength;
    }
    /**
     * Sets the naturalWeaponLength.
     * @param val the new value
     */
    public void setNaturalWeaponLength(final Long val) {
        naturalWeaponLength = val;
    }

    /** the name. */
    @Column(name = "name")
    @JsonProperty("name")
    @NotNull
    private String                    name;
    /**
     * Gets the name.
     * @return {@link String}
     */
    public String getName() {
        return name;
    }
    /**
     * Sets the name.
     * @param val the new value
     */
    public void setName(final String val) {
        name = val;
    }

    /** the moveStrength. */
    @ManyToOne(targetEntity = AVALONVulnerabilityEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "moveStrength")
    @JsonProperty("move_strength")
  
    private AVALONVulnerabilityEntity    moveStrength;
    /**
     * Gets the moveStrength.
     * @return {@link AVALONVulnerabilityEntity}
     */
    public AVALONVulnerabilityEntity getMoveStrength() {
        return moveStrength;
    }
    /**
     * Sets the moveStrength.
     * @param val the new value
     */
    public void setMoveStrength(final AVALONVulnerabilityEntity val) {
        moveStrength = val;
    }

    /** the internalScript. */
    @Column(name = "internal_script")
    @JsonProperty("internal_script")
    
    private String                    internalScript;
    /**
     * Gets the internalScript.
     * @return {@link String}
     */
    public String getInternalScript() {
        return internalScript;
    }
    /**
     * Sets the internalScript.
     * @param val the new value
     */
    public void setInternalScript(final String val) {
        internalScript = val;
    }

    /** the goldBounty. */
    @Column(name = "gold_bounty")
    @JsonProperty("gold_bounty")
    
    private Long                    goldBounty;
    /**
     * Gets the goldBounty.
     * @return {@link Long}
     */
    public Long getGoldBounty() {
        return goldBounty;
    }
    /**
     * Sets the goldBounty.
     * @param val the new value
     */
    public void setGoldBounty(final Long val) {
        goldBounty = val;
    }

    /** the gender. */
    @ManyToOne(targetEntity = AVALONGenderEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "gender")
    @JsonProperty("gender")
  
    private AVALONGenderEntity    gender;
    /**
     * Gets the gender.
     * @return {@link AVALONGenderEntity}
     */
    public AVALONGenderEntity getGender() {
        return gender;
    }
    /**
     * Sets the gender.
     * @param val the new value
     */
    public void setGender(final AVALONGenderEntity val) {
        gender = val;
    }

    /** the fameBounty. */
    @Column(name = "fame_bounty")
    @JsonProperty("fame_bounty")
    
    private Long                    fameBounty;
    /**
     * Gets the fameBounty.
     * @return {@link Long}
     */
    public Long getFameBounty() {
        return fameBounty;
    }
    /**
     * Sets the fameBounty.
     * @param val the new value
     */
    public void setFameBounty(final Long val) {
        fameBounty = val;
    }

    /** the alertedMove. */
    @Column(name = "alerted_move")
    @JsonProperty("alerted_move")
    @NotNull
    private long                    alertedMove;
    /**
     * Gets the alertedMove.
     * @return {@link long}
     */
    public long getAlertedMove() {
        return alertedMove;
    }
    /**
     * Sets the alertedMove.
     * @param val the new value
     */
    public void setAlertedMove(final long val) {
        alertedMove = val;
    }

    /** the alertedAttackWeight. */
    @ManyToOne(targetEntity = AVALONVulnerabilityEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "alertedAttackWeight")
    @JsonProperty("alerted_attack_weight")
  @NotNull
    private AVALONVulnerabilityEntity    alertedAttackWeight;
    /**
     * Gets the alertedAttackWeight.
     * @return {@link AVALONVulnerabilityEntity}
     */
    public AVALONVulnerabilityEntity getAlertedAttackWeight() {
        return alertedAttackWeight;
    }
    /**
     * Sets the alertedAttackWeight.
     * @param val the new value
     */
    public void setAlertedAttackWeight(final AVALONVulnerabilityEntity val) {
        alertedAttackWeight = val;
    }

    /** the alertedAttackStars. */
    @Column(name = "alerted_attack_stars")
    @JsonProperty("alerted_attack_stars")
    
    private Long                    alertedAttackStars;
    /**
     * Gets the alertedAttackStars.
     * @return {@link Long}
     */
    public Long getAlertedAttackStars() {
        return alertedAttackStars;
    }
    /**
     * Sets the alertedAttackStars.
     * @param val the new value
     */
    public void setAlertedAttackStars(final Long val) {
        alertedAttackStars = val;
    }

    /** the alertedAttackSpeed. */
    @Column(name = "alerted_attack_speed")
    @JsonProperty("alerted_attack_speed")
    @NotNull
    private long                    alertedAttackSpeed;
    /**
     * Gets the alertedAttackSpeed.
     * @return {@link long}
     */
    public long getAlertedAttackSpeed() {
        return alertedAttackSpeed;
    }
    /**
     * Sets the alertedAttackSpeed.
     * @param val the new value
     */
    public void setAlertedAttackSpeed(final long val) {
        alertedAttackSpeed = val;
    }

    /**
     * the list of {@link AVALONIoItemDataEntity}s associated with this
     * {@link AVALONIoNpcDataEntity}.
     */
    @OneToMany(targetEntity = AVALONIoItemDataEntity.class,
      fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinTable(name = "io_npc_data_inventory_items_lookup", schema = "avalon",
  joinColumns = @JoinColumn(name = "io_npc_data_id",
  referencedColumnName = "io_npc_data_id"),
  inverseJoinColumns = @JoinColumn(name = "io_item_data_id",
  referencedColumnName = "io_item_data_id"))
    @JsonProperty("inventory_items")
    private List<AVALONIoItemDataEntity>    inventoryItems;
    /**
     * Gets the list of inventoryItemss.
     * @return {@link List}<{@link AVALONIoItemDataEntity}>
     */
    public List<AVALONIoItemDataEntity> getInventoryItems() {
        return inventoryItems;
    }
    /**
     * Sets the list of inventoryItemss.
     * @param val the new value
     */
    public void setInventoryItems(final List<AVALONIoItemDataEntity> val) {
        inventoryItems = val;
    }

    /**
     * the list of {@link AVALONGroupEntity}s associated with this
     * {@link AVALONIoNpcDataEntity}.
     */
    @OneToMany(targetEntity = AVALONGroupEntity.class,
      fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinTable(name = "io_npc_data_groups_lookup", schema = "avalon",
  joinColumns = @JoinColumn(name = "io_npc_data_id",
  referencedColumnName = "io_npc_data_id"),
  inverseJoinColumns = @JoinColumn(name = "group_id",
  referencedColumnName = "group_id"))
    @JsonProperty("groups")
    private List<AVALONGroupEntity>    groups;
    /**
     * Gets the list of groupss.
     * @return {@link List}<{@link AVALONGroupEntity}>
     */
    public List<AVALONGroupEntity> getGroups() {
        return groups;
    }
    /**
     * Sets the list of groupss.
     * @param val the new value
     */
    public void setGroups(final List<AVALONGroupEntity> val) {
        groups = val;
    }

    @ElementCollection
    @CollectionTable(name = "io_npc_data_equipped_items_lookup",
  schema = "avalon", joinColumns = @JoinColumn(name = "io_npc_data_id"))
    @MapKeyColumn(name = "key")
    @Column(name = "value")
    @JsonProperty("equipped_items")
    private Map<String, String> equippedItems;
    /**
     * Gets the map of equippedItemss.
     * @return {@link Map}<{@link String}, {@link String}>
     */
    public Map<String, String> getEquippedItems() {
        return equippedItems;
    }
    /**
     * Sets the mapping for equippedItemss.
     * @param val the new value
     */
    public void setEquippedItems(Map<String, String> val) {
        equippedItems = val;
    }

}

