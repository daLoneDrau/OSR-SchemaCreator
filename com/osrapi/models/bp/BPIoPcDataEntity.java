package com.osrapi.models.bp;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.MapKeyColumn;
import javax.persistence.MapKeyJoinColumn;
import javax.persistence.MappedSuperclass;
import javax.persistence.OneToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * @author drau
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Entity
@Table(name = "io_pc_data", schema = "bp")
public final class BPIoPcDataEntity {
    /**
     * the primary key - an autogenerated id (unique for each user in the db).
     */
    @Id
    @Column(name = "io_pc_data_id")
    @GeneratedValue(strategy = GenerationType.SEQUENCE,
  generator = "io_pc_data_seq")
    @SequenceGenerator(
        name = "io_pc_data_seq",
        sequenceName = "bp.io_pc_data_id_seq",
        allocationSize = 1
    )
    private Long                    id;
    /** Creates a new instance of {@link BPIoPcDataEntity}. */
    public BPIoPcDataEntity() {
        super();
    }
    /**
     * Gets the id.
     * @return {@link Long}
     */
    public Long getId() {
        return id;
    }
    /**
     * Sets the id.
     * @param val the new value
     */
    public void setId(final Long val) {
        id = val;
    }

    /** the xp. */
    @Column(name = "xp")
    @JsonProperty("xp")
    @NotNull
    private long                    xp;
    /**
     * Gets the xp.
     * @return {@link long}
     */
    public long getXp() {
        return xp;
    }
    /**
     * Sets the xp.
     * @param val the new value
     */
    public void setXp(final long val) {
        xp = val;
    }

    /** the name. */
    @Column(name = "name")
    @JsonProperty("name")
    @NotNull
    private String                    name;
    /**
     * Gets the name.
     * @return {@link String}
     */
    public String getName() {
        return name;
    }
    /**
     * Sets the name.
     * @param val the new value
     */
    public void setName(final String val) {
        name = val;
    }

    /** the level. */
    @Column(name = "level")
    @JsonProperty("level")
    @NotNull
    private long                    level;
    /**
     * Gets the level.
     * @return {@link long}
     */
    public long getLevel() {
        return level;
    }
    /**
     * Sets the level.
     * @param val the new value
     */
    public void setLevel(final long val) {
        level = val;
    }

    /** the interfaceFlags. */
    @Column(name = "interface_flags")
    @JsonProperty("interface_flags")
    @NotNull
    private long                    interfaceFlags;
    /**
     * Gets the interfaceFlags.
     * @return {@link long}
     */
    public long getInterfaceFlags() {
        return interfaceFlags;
    }
    /**
     * Sets the interfaceFlags.
     * @param val the new value
     */
    public void setInterfaceFlags(final long val) {
        interfaceFlags = val;
    }

    /** the gold. */
    @Column(name = "gold")
    @JsonProperty("gold")
    @NotNull
    private float                    gold;
    /**
     * Gets the gold.
     * @return {@link float}
     */
    public float getGold() {
        return gold;
    }
    /**
     * Sets the gold.
     * @param val the new value
     */
    public void setGold(final float val) {
        gold = val;
    }

    /** the gender. */
    @ManyToOne(targetEntity = BPGenderEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "gender")
    @JsonProperty("gender")
  @NotNull
    private BPGenderEntity    gender;
    /**
     * Gets the gender.
     * @return {@link BPGenderEntity}
     */
    public BPGenderEntity getGender() {
        return gender;
    }
    /**
     * Sets the gender.
     * @param val the new value
     */
    public void setGender(final BPGenderEntity val) {
        gender = val;
    }

    /** the bags. */
    @Column(name = "bags")
    @JsonProperty("bags")
    @NotNull
    private long                    bags;
    /**
     * Gets the bags.
     * @return {@link long}
     */
    public long getBags() {
        return bags;
    }
    /**
     * Sets the bags.
     * @param val the new value
     */
    public void setBags(final long val) {
        bags = val;
    }

    /**
     * the list of keyring associated with this
     * {@link BPIoPcDataEntity}.
     */
    @Column
    @ElementCollection(targetClass = String.class)
    @CollectionTable(name = "io_pc_data_keyring_lookup", schema = "bp",
  joinColumns = { @JoinColumn(name = "io_pc_data_id") })
    @JsonProperty("keyring")
    private List<String>    keyring;
    /**
     * Gets the list of keyring.
     * @return {@link List}<{@link String}>
     */
    public List<String> getKeyring() {
        return keyring;
    }
    /**
     * Sets the list of keyring.
     * @param val the new value
     */
    public void setKeyring(final List<String> val) {
        keyring = val;
    }

    @ElementCollection
    @CollectionTable(name = "io_pc_data_equipped_items_lookup",
  schema = "bp", joinColumns = @JoinColumn(name = "io_pc_data_id"))
    @MapKeyColumn(name = "key")
    @Column(name = "value")
    @JsonProperty("equipped_items")
    private Map<String, Integer> equippedItems;
    /**
     * Gets the map of equippedItemss.
     * @return {@link Map}<{@link String}, {@link Integer}>
     */
    public Map<String, Integer> getEquippedItems() {
        return equippedItems;
    }
    /**
     * Sets the mapping for equippedItemss.
     * @param val the new value
     */
    public void setEquippedItems(Map<String, Integer> val) {
        equippedItems = val;
    }

    @ElementCollection
    @CollectionTable(name = "io_pc_data_attributes_lookup",
  schema = "bp", joinColumns = @JoinColumn(name = "io_pc_data_id"))
    @MapKeyColumn(name = "key")
    @Column(name = "value")
    @JsonProperty("attributes")
    private Map<String, Integer> attributes;
    /**
     * Gets the map of attributes.
     * @return {@link Map}<{@link String}, {@link Integer}>
     */
    public Map<String, Integer> getAttributes() {
        return attributes;
    }
    /**
     * Sets the mapping for attributes.
     * @param val the new value
     */
    public void setAttributes(Map<String, Integer> val) {
        attributes = val;
    }

}

