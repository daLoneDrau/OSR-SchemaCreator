package com.osrapi.models.csr;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.MapKeyColumn;
import javax.persistence.MapKeyJoinColumn;
import javax.persistence.MappedSuperclass;
import javax.persistence.OneToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * @author drau
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Entity
@Table(name = "father_vocation", schema = "csr")
public final class CSRFatherVocationEntity {
    /**
     * the primary key - an autogenerated id (unique for each user in the db).
     */
    @Id
    @Column(name = "father_vocation_id")
    @GeneratedValue(strategy = GenerationType.SEQUENCE,
  generator = "father_vocation_seq")
    @SequenceGenerator(
        name = "father_vocation_seq",
        sequenceName = "csr.father_vocation_id_seq",
        allocationSize = 1
    )
    private Long                    id;
    /** Creates a new instance of {@link CSRFatherVocationEntity}. */
    public CSRFatherVocationEntity() {
        super();
    }
    /**
     * Gets the id.
     * @return {@link Long}
     */
    public Long getId() {
        return id;
    }
    /**
     * Sets the id.
     * @param val the new value
     */
    public void setId(final Long val) {
        id = val;
    }

    /** the isLiveried. */
    @Column(name = "is_liveried")
    @JsonProperty("is_liveried")
    
    private Boolean                    isLiveried;
    /**
     * Gets the isLiveried.
     * @return {@link Boolean}
     */
    public Boolean getIsLiveried() {
        return isLiveried;
    }
    /**
     * Sets the isLiveried.
     * @param val the new value
     */
    public void setIsLiveried(final Boolean val) {
        isLiveried = val;
    }

    /** the rollMax. */
    @Column(name = "roll_max")
    @JsonProperty("roll_max")
    @NotNull
    private long                    rollMax;
    /**
     * Gets the rollMax.
     * @return {@link long}
     */
    public long getRollMax() {
        return rollMax;
    }
    /**
     * Sets the rollMax.
     * @param val the new value
     */
    public void setRollMax(final long val) {
        rollMax = val;
    }

    /** the rollMin. */
    @Column(name = "roll_min")
    @JsonProperty("roll_min")
    @NotNull
    private long                    rollMin;
    /**
     * Gets the rollMin.
     * @return {@link long}
     */
    public long getRollMin() {
        return rollMin;
    }
    /**
     * Sets the rollMin.
     * @param val the new value
     */
    public void setRollMin(final long val) {
        rollMin = val;
    }

    /** the readingIntRequired. */
    @Column(name = "reading_int_required")
    @JsonProperty("reading_int_required")
    
    private Long                    readingIntRequired;
    /**
     * Gets the readingIntRequired.
     * @return {@link Long}
     */
    public Long getReadingIntRequired() {
        return readingIntRequired;
    }
    /**
     * Sets the readingIntRequired.
     * @param val the new value
     */
    public void setReadingIntRequired(final Long val) {
        readingIntRequired = val;
    }

    /** the numStartingWrittenLanguages. */
    @Column(name = "num_starting_written_languages")
    @JsonProperty("num_starting_written_languages")
    
    private Long                    numStartingWrittenLanguages;
    /**
     * Gets the numStartingWrittenLanguages.
     * @return {@link Long}
     */
    public Long getNumStartingWrittenLanguages() {
        return numStartingWrittenLanguages;
    }
    /**
     * Sets the numStartingWrittenLanguages.
     * @param val the new value
     */
    public void setNumStartingWrittenLanguages(final Long val) {
        numStartingWrittenLanguages = val;
    }

    /** the numStartingForeignLanguages. */
    @Column(name = "num_starting_foreign_languages")
    @JsonProperty("num_starting_foreign_languages")
    
    private Long                    numStartingForeignLanguages;
    /**
     * Gets the numStartingForeignLanguages.
     * @return {@link Long}
     */
    public Long getNumStartingForeignLanguages() {
        return numStartingForeignLanguages;
    }
    /**
     * Sets the numStartingForeignLanguages.
     * @param val the new value
     */
    public void setNumStartingForeignLanguages(final Long val) {
        numStartingForeignLanguages = val;
    }

    /** the numStartingBinary1LoreSkills. */
    @Column(name = "num_starting_binary1_lore_skills")
    @JsonProperty("num_starting_binary1_lore_skills")
    
    private Long                    numStartingBinary1LoreSkills;
    /**
     * Gets the numStartingBinary1LoreSkills.
     * @return {@link Long}
     */
    public Long getNumStartingBinary1LoreSkills() {
        return numStartingBinary1LoreSkills;
    }
    /**
     * Sets the numStartingBinary1LoreSkills.
     * @param val the new value
     */
    public void setNumStartingBinary1LoreSkills(final Long val) {
        numStartingBinary1LoreSkills = val;
    }

    /** the numStartingBinary1MagickMethods. */
    @Column(name = "num_starting_binary1_magick_methods")
    @JsonProperty("num_starting_binary1_magick_methods")
    
    private Long                    numStartingBinary1MagickMethods;
    /**
     * Gets the numStartingBinary1MagickMethods.
     * @return {@link Long}
     */
    public Long getNumStartingBinary1MagickMethods() {
        return numStartingBinary1MagickMethods;
    }
    /**
     * Sets the numStartingBinary1MagickMethods.
     * @param val the new value
     */
    public void setNumStartingBinary1MagickMethods(final Long val) {
        numStartingBinary1MagickMethods = val;
    }

    /** the numStartingBinary0MagickMethods. */
    @Column(name = "num_starting_binary0_magick_methods")
    @JsonProperty("num_starting_binary0_magick_methods")
    
    private Long                    numStartingBinary0MagickMethods;
    /**
     * Gets the numStartingBinary0MagickMethods.
     * @return {@link Long}
     */
    public Long getNumStartingBinary0MagickMethods() {
        return numStartingBinary0MagickMethods;
    }
    /**
     * Sets the numStartingBinary0MagickMethods.
     * @param val the new value
     */
    public void setNumStartingBinary0MagickMethods(final Long val) {
        numStartingBinary0MagickMethods = val;
    }

    /** the numStartingBonusSkills. */
    @Column(name = "num_starting_bonus_skills")
    @JsonProperty("num_starting_bonus_skills")
    
    private Long                    numStartingBonusSkills;
    /**
     * Gets the numStartingBonusSkills.
     * @return {@link Long}
     */
    public Long getNumStartingBonusSkills() {
        return numStartingBonusSkills;
    }
    /**
     * Sets the numStartingBonusSkills.
     * @param val the new value
     */
    public void setNumStartingBonusSkills(final Long val) {
        numStartingBonusSkills = val;
    }

    /** the numStartingTradeSkills. */
    @Column(name = "num_starting_trade_skills")
    @JsonProperty("num_starting_trade_skills")
    
    private Long                    numStartingTradeSkills;
    /**
     * Gets the numStartingTradeSkills.
     * @return {@link Long}
     */
    public Long getNumStartingTradeSkills() {
        return numStartingTradeSkills;
    }
    /**
     * Sets the numStartingTradeSkills.
     * @param val the new value
     */
    public void setNumStartingTradeSkills(final Long val) {
        numStartingTradeSkills = val;
    }

    /** the numStartingThieverySkills. */
    @Column(name = "num_starting_thievery_skills")
    @JsonProperty("num_starting_thievery_skills")
    
    private Long                    numStartingThieverySkills;
    /**
     * Gets the numStartingThieverySkills.
     * @return {@link Long}
     */
    public Long getNumStartingThieverySkills() {
        return numStartingThieverySkills;
    }
    /**
     * Sets the numStartingThieverySkills.
     * @param val the new value
     */
    public void setNumStartingThieverySkills(final Long val) {
        numStartingThieverySkills = val;
    }

    /** the numStartingSeaSkills. */
    @Column(name = "num_starting_sea_skills")
    @JsonProperty("num_starting_sea_skills")
    
    private Long                    numStartingSeaSkills;
    /**
     * Gets the numStartingSeaSkills.
     * @return {@link Long}
     */
    public Long getNumStartingSeaSkills() {
        return numStartingSeaSkills;
    }
    /**
     * Sets the numStartingSeaSkills.
     * @param val the new value
     */
    public void setNumStartingSeaSkills(final Long val) {
        numStartingSeaSkills = val;
    }

    /** the numStartingOutdoorSkills. */
    @Column(name = "num_starting_outdoor_skills")
    @JsonProperty("num_starting_outdoor_skills")
    
    private Long                    numStartingOutdoorSkills;
    /**
     * Gets the numStartingOutdoorSkills.
     * @return {@link Long}
     */
    public Long getNumStartingOutdoorSkills() {
        return numStartingOutdoorSkills;
    }
    /**
     * Sets the numStartingOutdoorSkills.
     * @param val the new value
     */
    public void setNumStartingOutdoorSkills(final Long val) {
        numStartingOutdoorSkills = val;
    }

    /** the numStartingLoreSkills. */
    @Column(name = "num_starting_lore_skills")
    @JsonProperty("num_starting_lore_skills")
    
    private Long                    numStartingLoreSkills;
    /**
     * Gets the numStartingLoreSkills.
     * @return {@link Long}
     */
    public Long getNumStartingLoreSkills() {
        return numStartingLoreSkills;
    }
    /**
     * Sets the numStartingLoreSkills.
     * @param val the new value
     */
    public void setNumStartingLoreSkills(final Long val) {
        numStartingLoreSkills = val;
    }

    /** the numStartingCombatSkills. */
    @Column(name = "num_starting_combat_skills")
    @JsonProperty("num_starting_combat_skills")
    
    private Long                    numStartingCombatSkills;
    /**
     * Gets the numStartingCombatSkills.
     * @return {@link Long}
     */
    public Long getNumStartingCombatSkills() {
        return numStartingCombatSkills;
    }
    /**
     * Sets the numStartingCombatSkills.
     * @param val the new value
     */
    public void setNumStartingCombatSkills(final Long val) {
        numStartingCombatSkills = val;
    }

    /** the numStartingCrafttSkills. */
    @Column(name = "num_starting_craftt_skills")
    @JsonProperty("num_starting_craftt_skills")
    
    private Long                    numStartingCrafttSkills;
    /**
     * Gets the numStartingCrafttSkills.
     * @return {@link Long}
     */
    public Long getNumStartingCrafttSkills() {
        return numStartingCrafttSkills;
    }
    /**
     * Sets the numStartingCrafttSkills.
     * @param val the new value
     */
    public void setNumStartingCrafttSkills(final Long val) {
        numStartingCrafttSkills = val;
    }

    /** the numStartingArtisticSkills. */
    @Column(name = "num_starting_artistic_skills")
    @JsonProperty("num_starting_artistic_skills")
    
    private Long                    numStartingArtisticSkills;
    /**
     * Gets the numStartingArtisticSkills.
     * @return {@link Long}
     */
    public Long getNumStartingArtisticSkills() {
        return numStartingArtisticSkills;
    }
    /**
     * Sets the numStartingArtisticSkills.
     * @param val the new value
     */
    public void setNumStartingArtisticSkills(final Long val) {
        numStartingArtisticSkills = val;
    }

    /** the numStartingAgriculturalSkills. */
    @Column(name = "num_starting_agricultural_skills")
    @JsonProperty("num_starting_agricultural_skills")
    
    private Long                    numStartingAgriculturalSkills;
    /**
     * Gets the numStartingAgriculturalSkills.
     * @return {@link Long}
     */
    public Long getNumStartingAgriculturalSkills() {
        return numStartingAgriculturalSkills;
    }
    /**
     * Sets the numStartingAgriculturalSkills.
     * @param val the new value
     */
    public void setNumStartingAgriculturalSkills(final Long val) {
        numStartingAgriculturalSkills = val;
    }

    /** the numStartingAnimalSkills. */
    @Column(name = "num_starting_animal_skills")
    @JsonProperty("num_starting_animal_skills")
    
    private Long                    numStartingAnimalSkills;
    /**
     * Gets the numStartingAnimalSkills.
     * @return {@link Long}
     */
    public Long getNumStartingAnimalSkills() {
        return numStartingAnimalSkills;
    }
    /**
     * Sets the numStartingAnimalSkills.
     * @param val the new value
     */
    public void setNumStartingAnimalSkills(final Long val) {
        numStartingAnimalSkills = val;
    }

    /** the socialStatus. */
    @Column(name = "social_status")
    @JsonProperty("social_status")
    @NotNull
    private long                    socialStatus;
    /**
     * Gets the socialStatus.
     * @return {@link long}
     */
    public long getSocialStatus() {
        return socialStatus;
    }
    /**
     * Sets the socialStatus.
     * @param val the new value
     */
    public void setSocialStatus(final long val) {
        socialStatus = val;
    }

    /** the numBonusD10SocialStatus. */
    @Column(name = "num_bonus_d10_social_status")
    @JsonProperty("num_bonus_d10_social_status")
    @NotNull
    private long                    numBonusD10SocialStatus;
    /**
     * Gets the numBonusD10SocialStatus.
     * @return {@link long}
     */
    public long getNumBonusD10SocialStatus() {
        return numBonusD10SocialStatus;
    }
    /**
     * Sets the numBonusD10SocialStatus.
     * @param val the new value
     */
    public void setNumBonusD10SocialStatus(final long val) {
        numBonusD10SocialStatus = val;
    }

    /** the thievesGuildStatus. */
    @Column(name = "thieves_guild_status")
    @JsonProperty("thieves_guild_status")
    @NotNull
    private long                    thievesGuildStatus;
    /**
     * Gets the thievesGuildStatus.
     * @return {@link long}
     */
    public long getThievesGuildStatus() {
        return thievesGuildStatus;
    }
    /**
     * Sets the thievesGuildStatus.
     * @param val the new value
     */
    public void setThievesGuildStatus(final long val) {
        thievesGuildStatus = val;
    }

    /** the feudalHolding. */
    @Column(name = "feudal_holding")
    @JsonProperty("feudal_holding")
    @NotNull
    private long                    feudalHolding;
    /**
     * Gets the feudalHolding.
     * @return {@link long}
     */
    public long getFeudalHolding() {
        return feudalHolding;
    }
    /**
     * Sets the feudalHolding.
     * @param val the new value
     */
    public void setFeudalHolding(final long val) {
        feudalHolding = val;
    }

    /** the name. */
    @Column(name = "name")
    @JsonProperty("name")
    @NotNull
    private String                    name;
    /**
     * Gets the name.
     * @return {@link String}
     */
    public String getName() {
        return name;
    }
    /**
     * Sets the name.
     * @param val the new value
     */
    public void setName(final String val) {
        name = val;
    }

    /** the socialClass. */
    @ManyToOne(targetEntity = CSRSocialClassEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "socialClass")
    @JsonProperty("social_class")
  @NotNull
    private CSRSocialClassEntity    socialClass;
    /**
     * Gets the socialClass.
     * @return {@link CSRSocialClassEntity}
     */
    public CSRSocialClassEntity getSocialClass() {
        return socialClass;
    }
    /**
     * Sets the socialClass.
     * @param val the new value
     */
    public void setSocialClass(final CSRSocialClassEntity val) {
        socialClass = val;
    }

    /** the overlord. */
    @ManyToOne(targetEntity = CSRFatherVocationEntity.class, fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "overlord")
    @JsonProperty("overlord")
  
    private CSRFatherVocationEntity    overlord;
    /**
     * Gets the overlord.
     * @return {@link CSRFatherVocationEntity}
     */
    public CSRFatherVocationEntity getOverlord() {
        return overlord;
    }
    /**
     * Sets the overlord.
     * @param val the new value
     */
    public void setOverlord(final CSRFatherVocationEntity val) {
        overlord = val;
    }

    /**
     * the list of {@link CSRSkillEntity}s associated with this
     * {@link CSRFatherVocationEntity}.
     */
    @OneToMany(targetEntity = CSRSkillEntity.class,
      fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinTable(name = "father_vocation_binary_skills_lookup", schema = "csr",
  joinColumns = @JoinColumn(name = "father_vocation_id",
  referencedColumnName = "father_vocation_id"),
  inverseJoinColumns = @JoinColumn(name = "skill_id",
  referencedColumnName = "skill_id"))
    @JsonProperty("binary_skills")
    private List<CSRSkillEntity>    binarySkills;
    /**
     * Gets the list of binarySkillss.
     * @return {@link List}<{@link CSRSkillEntity}>
     */
    public List<CSRSkillEntity> getBinarySkills() {
        return binarySkills;
    }
    /**
     * Sets the list of binarySkillss.
     * @param val the new value
     */
    public void setBinarySkills(final List<CSRSkillEntity> val) {
        binarySkills = val;
    }

    /**
     * the list of {@link CSRSkillEntity}s associated with this
     * {@link CSRFatherVocationEntity}.
     */
    @OneToMany(targetEntity = CSRSkillEntity.class,
      fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinTable(name = "father_vocation_starting_skills_lookup", schema = "csr",
  joinColumns = @JoinColumn(name = "father_vocation_id",
  referencedColumnName = "father_vocation_id"),
  inverseJoinColumns = @JoinColumn(name = "skill_id",
  referencedColumnName = "skill_id"))
    @JsonProperty("starting_skills")
    private List<CSRSkillEntity>    startingSkills;
    /**
     * Gets the list of startingSkillss.
     * @return {@link List}<{@link CSRSkillEntity}>
     */
    public List<CSRSkillEntity> getStartingSkills() {
        return startingSkills;
    }
    /**
     * Sets the list of startingSkillss.
     * @param val the new value
     */
    public void setStartingSkills(final List<CSRSkillEntity> val) {
        startingSkills = val;
    }

}

